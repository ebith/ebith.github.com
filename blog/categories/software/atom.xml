<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: software | おいら屋ファクトリー]]></title>
  <link href="http://blog.feelmy.net/blog/categories/software/atom.xml" rel="self"/>
  <link href="http://blog.feelmy.net/"/>
  <updated>2013-03-08T05:02:10+09:00</updated>
  <id>http://blog.feelmy.net/</id>
  <author>
    <name><![CDATA[ebith]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tiarraのログをブラウザから見たり検索したりできるやつ作った]]></title>
    <link href="http://blog.feelmy.net/2013/02/15/tlv-js/"/>
    <updated>2013-02-15T22:00:00+09:00</updated>
    <id>http://blog.feelmy.net/2013/02/15/tlv-js</id>
    <content type="html"><![CDATA[<h2><a href="https://github.com/ebith/TLV.js" title="ebith/TLV.js · GitHub">TLV.js</a></h2>

<p><a href="http://www.flickr.com/photos/ebith/8475029653/" title="tlv01 by Ebith, on Flickr"><img src="http://farm9.staticflickr.com/8111/8475029653_055048fbb4_n.jpg" width="320" height="240" alt="tlv01"></a>
<a href="http://www.flickr.com/photos/ebith/8475029689/" title="tlv02 by Ebith, on Flickr"><img src="http://farm9.staticflickr.com/8246/8475029689_ba2e947ac5_n.jpg" width="320" height="240" alt="tlv02"></a><br/>
画像はTwitterのPublic TimelineをIRCのログ代わりにしたやつ。<br/>
古いログをひたすら継ぎ足して表示したり、検索したり、とある日のログを読んだりできる。</p>

<h2>試してみる</h2>

<p>MongoDBは動いてる前提。インストールするなら<a href="http://docs.mongodb.org/manual/installation/" title="Installing MongoDB — MongoDB Manual">Installing MongoDB</a>が詳しい。<br/>
Mongo.pmをtiarraPath/module/Log/に配置、confの例は以下に。<br/>
必要に応じて<code>cpanm MongoDB</code>したのち<code>/load</code>か再起動でMongo.pmを読み込む。
<code>
+ Log::Mongo {
  charset: utf8
  channel: *
}
</code>
Node.jsとcoffee-scriptが入っていれば<code>npm install</code>して<code>coffee app.coffee</code>で動き出す。<br/>
http://localhost:3000にアクセス！</p>

<h2>その他</h2>

<p>環境変数NODE_ENVを<code>production</code>に設定するとSSL+BASIC認証で起動する。_run.sh参照。<br/>
あとから見返したいチャンネルが1つだけだったのでチャンネル名を考慮していない。全部混ざって表示されるはず。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HubotでIRC Botを作る]]></title>
    <link href="http://blog.feelmy.net/2013/02/03/hubot-irc/"/>
    <updated>2013-02-03T01:09:00+09:00</updated>
    <id>http://blog.feelmy.net/2013/02/03/hubot-irc</id>
    <content type="html"><![CDATA[<h2>Node.jsのインストールと下準備</h2>

<p>Node.jsの管理には<a href="https://github.com/hokaccha/nodebrew" title="hokaccha/nodebrew · GitHub">Nodebrew</a>を使う。<br/>
Readmeに従ってインストールして、Nodebrew経由でNodeのバイナリを入れる。<br/>
更にcoffee-script必要らしいのとforeverあると便利らしいので入れとく。
<code>sh
nodebrew install-binary stable
nodebrew use v0.8.17
npm install -g forever
npm install -g coffee-script
</code></p>

<h2>Bot作る</h2>

<p>フォルダ構成はこんなの。
<code>
bot/
├── node_modules
├── scripts
│   ├── colorful-ping.coffee
│   ├── config.coffee
│   ├── fetch-title.coffee
│   ├── rating.coffee
│   ├── reddit-gamedeals.coffee
│   ├── upgrade.coffee
│   └── vpn-manager.coffee
├── hubot-scripts.json
├── package.json
└── run.sh
</code></p>

<p>こんな感じにpackage.json書いてnpm installするとややこしいことなくインストール完了。
```json
{
  "name": "ebithubot",
  "version": "0.0.1",
  "dependencies": {</p>

<pre><code>"hubot": "2.3.5",
"hubot-irc": "0.1.4",
"hubot-scripts": "2.2.2",

"cron": "*",
"request": "*",
"iconv-jp": "*",
"request": "*",
"cheerio": "*",
"aws-sdk": "*",
"ntwitter": "*"
</code></pre>

<p>  }
}
```</p>

<p>あとは好きなだけスクリプトを書いてBotの機能強化に励む。<br/>
<a href="https://github.com/github/hubot/tree/master/src/scripts" title="hubot/src/scripts at master · github/hubot · GitHub">Hubot付属のscript</a>が良い例。</p>

<h2>運用において</h2>

<p>スクリプトのリロード機能が無くて、毎回再起動するしかないのでIRC Proxy無しでの運用は厳しい。<br/>
かといって普段使いのProxyに繋ぐと入ってるチャンネル全部のメッセージを処理対象にしてしまうのでイマイチ。</p>

<h3>起動スクリプト</h3>

<p>設定類は環境変数で行うのが基本らしいのでシェルスクリプトに<code>export</code>を並び立てる。<br/>
```sh</p>

<h1>!/usr/bin/env bash</h1>

<h1>hubot</h1>

<p>export PORT=8889</p>

<h1>hubot-irc</h1>

<p>export HUBOT_IRC_UNFLOOD="true"
export HUBOT_IRC_NICK="ebithubot"
export HUBOT_IRC_PORT="6669"
export HUBOT_IRC_SERVER="localhost"
export HUBOT_IRC_ROOMS="#ebithubot"</p>

<p>forever start -c coffee node_modules/hubot/bin/hubot -a irc
```</p>

<h3>Notice使いたい</h3>

<p><a href="http://blog.fumiz.me/2012/08/05/hubot-irc-bot-script/#notice" title="hubotスクリプトの書き方とサンプル集 | mitc">hubotスクリプトの書き方とサンプル集 | mitc</a>によると互換性のために削除されたらしい。<br/>
hubot-ircにパッチを当てて復活させる。v0.1.4向け。
<div><script src='https://gist.github.com/4505583.js'></script>
<noscript><pre><code>diff --git a/src/irc.coffee b/src/irc.coffee
index 1cd6be3..dbfb495 100644
--- a/src/irc.coffee
+++ b/src/irc.coffee
@@ -5,6 +5,12 @@
 Irc = require 'irc'
 
 class IrcBot extends Adapter
+  constructor: (@robot) -&gt;
+    super @robot
+    @robot.notice = (user, strings...) -&gt;
+      @adapter.notice user, strings...
+    @robot.Response = IrcResponse
+
   send: (user, strings...) -&gt;
     for str in strings
       if not str?
@@ -176,5 +182,9 @@ class IrcBot extends Adapter
 
     self.emit &quot;connected&quot;
 
+class IrcResponse extends Response
+  notice: (strings...) -&gt;
+    @robot.adapter.notice @message.user, strings...
+
 exports.use = (robot) -&gt;
   new IrcBot robot</code></pre></noscript></div>
</p>

<h3>データの永続化</h3>

<p>データの永続化はオプションになっていて、Redis以外にもMongoDBやAmazon S3とかファイルも選べるようになってる。<br/>
どれもhubot-scriptsのリポジトリに入っているので<code>hubot-scripts.json</code>に<code>["redis-brain.coffee"]</code>とか書く。<br/>
永続化のための*-brain.coffeeが読み込まれるとrobot.brain.dataが5秒おきに自動保存されるようになる。</p>

<p>ただし02/01/2013現在npm上で最新のhubot-scripts 2.4.1に入ってるredis-brain.coffeeは壊れてるので一つ前の2.2.2とか使うべき。</p>

<h3>forever</h3>

<p>簡単なdaemontoolsみたいなので便利なんだけど、logrotateの仕組みが無いのでログをいっぱい吐いてるとディスクを圧迫する。<br/>
かといってログをrmとかしちゃうとそこで書き込みが止まってしまうのでアレ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KeePass2のkdbxをMacでも快適に読めるようにした]]></title>
    <link href="http://blog.feelmy.net/2012/09/23/keepass2-for-osx/"/>
    <updated>2012-09-23T04:21:00+09:00</updated>
    <id>http://blog.feelmy.net/2012/09/23/keepass2-for-osx</id>
    <content type="html"><![CDATA[<p>Macbook触ってる時間が長くなってくるとKeePass2がまともに動かないのが凄く気になってきたし、<br/>
かと言って1Passwordは凄く高いのでどうにかしたくて右往左往してたらkdbxを読めるPerlモジュールを見つけたので頑張った。</p>

<p>PerlのFile::KeePassとIO::Prompter、<a href="https://github.com/mooz/percol" title="mooz/percol">mooz/percol</a>が必要。</p>

<p><div><script src='https://gist.github.com/3767494.js'></script>
<noscript><pre><code>#!/usr/bin/env perl
use strict;
use warnings;
use utf8;

use File::KeePass;
use IO::Prompter;
use Encode;

my $file = shift @ARGV;
my $pass = prompt('Password: ', -e =&gt; '');

my $k = File::KeePass-&gt;new;

$k-&gt;load_db($file, $pass);

$k-&gt;unlock;

my @entries = $k-&gt;find_entries({});

open(OUT, '| percol | awk \'BEGIN { FS = &quot; :: &quot;} { printf $2 }\' | pbcopy ');
foreach my $entry (@entries) {
  next unless ($entry-&gt;{title} &amp;&amp; $entry-&gt;{password});
  print OUT encode_utf8(&quot;$entry-&gt;{title} :: $entry-&gt;{password}\n&quot;);
}
close(OUT);

$k-&gt;clear;</code></pre></noscript></div>
</p>

<p><code>sh
./keepass.pl ~/ebith.kdbx
</code></p>

<p>みたいな感じで使う。
percolのお陰で絞込み検索が素晴らしい感じなので便利。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ファイラから7-zip(7zG.exe)使うようにすると捗る]]></title>
    <link href="http://blog.feelmy.net/2012/09/18/use-7-zip-from-a-filer/"/>
    <updated>2012-09-18T00:10:00+09:00</updated>
    <id>http://blog.feelmy.net/2012/09/18/use-7-zip-from-a-filer</id>
    <content type="html"><![CDATA[<p>Windowsではずっと統合アーカイバプロジェクトのDLL群とそれらを使うアーカイバにお世話になってきたけど、<br/>
<a href="http://sevenzip.sourceforge.jp/" title="7-Zip">7-Zip</a>のほうが速いので7-Zip付属の7zG.exe, 7z.exeとB2E(Bridge To Executables)に移行することにした。<br/>
B2Eの本家は<a href="http://www.kmonos.net/lib/noah.ja.html" title="Noah - kMonos.NET">Noah</a>だけど、<a href="http://claybird.sakura.ne.jp/garage/lhaforge/" title="泥巣 : 作品庫 - LhaForge">LhaForge</a>の方がコマンドラインオプションが充実していて使いやすいのでそっちを使う。</p>

<p><div><script src='https://gist.github.com/3737689.js'></script>
<noscript><pre><code>load:
  (name 7zG.exe)
  (type 7z LZMA *LZMA2)

encode:
  (if (method 1) (cmd a -t7z -m0=LZMA (arc.7z) (list\*)))
  (if (method 2) (cmd a -t7z -m0=LZMA2 (arc.7z) (list\*)))</code></pre></noscript></div>

zip, 7z圧縮用と展開用のスクリプト。</p>

<p><code>
  C:\usr\app\lfarchive\LhaForge.exe /b2e /e                   #展開
  C:\usr\app\lfarchive\LhaForge.exe /b2e /c:zip /method:Store #圧縮(Zip Store)
  C:\usr\app\lfarchive\LhaForge.exe /b2e /c:7z /method:LZMA2  #圧縮(7z LZMA2)
</code>
LhaForgeをファイラから呼ぶ場合こんな感じ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[新PCにWindows 7入れた]]></title>
    <link href="http://blog.feelmy.net/2012/09/12/install-windows-7/"/>
    <updated>2012-09-12T21:43:00+09:00</updated>
    <id>http://blog.feelmy.net/2012/09/12/install-windows-7</id>
    <content type="html"><![CDATA[<p>Windows 7のインストールは3回目ぐらい、XPの頃と比べると本当に楽になった。<br/>
OSのインストール後の流れをメモっておく。</p>

<h2>ドライバのインストール</h2>

<ul>
<li>マザーボード系

<ul>
<li>チップセット</li>
<li>LAN</li>
<li>USB3</li>
</ul>
</li>
<li>GPU</li>
<li>サウンドカード</li>
</ul>


<h2>設定</h2>

<ul>
<li>サービスの停止

<ul>
<li>Superfetch</li>
<li>Windows Search</li>
</ul>
</li>
<li>SNP: 無効(<a href="http://itpro.nikkeibp.co.jp/article/COLUMN/20100824/351391/" title="ITアーキテクトの「やってはいけない」 - ［Windows 7編］ネットワーク設定を標準で使ってはいけない：ITpro">ITアーキテクトの「やってはいけない」 - ［Windows 7編］ネットワーク設定を標準で使ってはいけない：ITpro</a>)</li>
<li>システムの復元: 無効</li>
<li>ページングファイル: 最小</li>
<li>ハイバネーション: オフ</li>
<li>バックアップ: 週1に設定</li>
</ul>


<h2>ソフトのインストール</h2>

<ul>
<li><a href="http://www.comodo.com/home/internet-security/free-internet-security.php" title="Free Internet Security, Download Internet Security Software Suite - Comodo">COMODO Internet Security</a>

<ul>
<li>インストールに関しては2chのテンプレが詳しい(<a href="http://find.2ch.net/?STR=comodo+internet+security" title="2ch検索: [comodo internet security]">2ch検索: [comodo internet security]</a>)</li>
<li>日本語化(<a href="http://torichuu.blog69.fc2.com/" title="NipsuのBlog">NipsuのBlog</a>)</li>
</ul>
</li>
<li><a href="https://www.dropbox.com/" title="Dropbox - 生活をシンプルに">Dropbox</a></li>
<li><a href="http://www.fraps.com/" title="FRAPS show fps, record video game movies, screen capture software">FRAPS</a></li>
<li><a href="http://www.mozilla.jp/firefox/" title="次世代ブラウザ Firefox — 高速・安全・カスタマイズ自在な無料ブラウザ">Firefox</a></li>
<li><a href="http://www.google.co.jp/ime/" title="Google 日本語入力 - ダウンロード">Google 日本語入力</a></li>
<li><a href="http://www.growlforwindows.com/gfw/" title="Growl for Windows">Growl for Windows</a></li>
<li><a href="http://www.apple.com/jp/itunes/download/" title="アップル - iTunes - iTunesを今すぐダウンロード">iTunes</a>

<ul>
<li><a href="http://www.apple.com/jp/support/iphone/enterprise/" title="Apple - サポート - iPhone - エンタープライズ">iPhone 構成ユーティリティ</a></li>
<li>C:\Users\ebith\AppData\Roaming\Apple Computer\MobileSyncとC:\Users\ebith\Music\iTunesをデータドライブに移動してシンボリックリンクをはっておく</li>
</ul>
</li>
<li><a href="http://schinagl.priv.at/nt/hardlinkshellext/hardlinkshellext.html" title="Link Shell Extension">Link Shell Extension</a></li>
<li><a href="http://www.skype.com/intl/ja/home" title="オンラインで無料のSkypeインスタント通話と固定電話への格安通話 - Skype">Skype</a></li>
<li><a href="http://store.steampowered.com/" title="Steam へようこそ">Steam</a></li>
<li><a href="http://www.truecrypt.org/" title="TrueCrypt - Free Open-Source On-The-Fly Disk Encryption Software for Windows 7/Vista/XP, Mac OS X and Linux">TrueCrypt</a></li>
<li><a href="https://www.virtualbox.org/" title="Oracle VM VirtualBox">VirtualBox</a>

<ul>
<li><a href="http://www.toptensoftware.com/VBoxHeadlessTray/" title="Topten Software">VBoxHeadlessTray</a></li>
</ul>
</li>
<li><a href="http://www.appletkan.com/nodoka.htm" title="汎用キーバインディング変更ソフト「のどか」">のどか</a></li>
</ul>


<p>その他のファイルはバックアップからコピーして戻す。<br/>
ソフト自体はポータブルなのにインストーラー版しか提供しないソフトが多くてこういう時すごく面倒くさいよね。</p>
]]></content>
  </entry>
  
</feed>
