<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mac | おいら屋ファクトリー]]></title>
  <link href="http://blog.feelmy.net/categories/mac/atom.xml" rel="self"/>
  <link href="http://blog.feelmy.net/"/>
  <updated>2013-06-01T23:46:30+09:00</updated>
  <id>http://blog.feelmy.net/</id>
  <author>
    <name><![CDATA[ebith]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[KeePass2のkdbxをMacでも快適に読めるようにした]]></title>
    <link href="http://blog.feelmy.net/2012/09/23/keepass2-for-osx/"/>
    <updated>2012-09-23T04:21:00+09:00</updated>
    <id>http://blog.feelmy.net/2012/09/23/keepass2-for-osx</id>
    <content type="html"><![CDATA[<p>Macbook触ってる時間が長くなってくるとKeePass2がまともに動かないのが凄く気になってきたし、<br/>
かと言って1Passwordは凄く高いのでどうにかしたくて右往左往してたらkdbxを読めるPerlモジュールを見つけたので頑張った。</p>

<p>PerlのFile::KeePassとIO::Prompter、<a href="https://github.com/mooz/percol" title="mooz/percol">mooz/percol</a>が必要。</p>

<p><div><script src='https://gist.github.com/3767494.js'></script>
<noscript><pre><code>#!/usr/bin/env perl
use strict;
use warnings;
use utf8;

use File::KeePass;
use IO::Prompter;
use Encode;

my $file = shift @ARGV;
my $pass = prompt('Password: ', -e =&gt; '');

my $k = File::KeePass-&gt;new;

$k-&gt;load_db($file, $pass);

$k-&gt;unlock;

my @entries = $k-&gt;find_entries({});

open(OUT, '| percol | awk \'BEGIN { FS = &quot; :: &quot;} { printf $2 }\' | pbcopy ');
foreach my $entry (@entries) {
  next unless ($entry-&gt;{title} &amp;&amp; $entry-&gt;{password});
  print OUT encode_utf8(&quot;$entry-&gt;{title} :: $entry-&gt;{password}\n&quot;);
}
close(OUT);

$k-&gt;clear;</code></pre></noscript></div>
</p>

<p><code>sh
./keepass.pl ~/ebith.kdbx
</code></p>

<p>みたいな感じで使う。
percolのお陰で絞込み検索が素晴らしい感じなので便利。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gyazoのアップロード先をTumblrにするやつ(Gyamblr) API v2版 for OS X]]></title>
    <link href="http://blog.feelmy.net/2012/09/07/gyamblr-for-osx%28tumblr-api-v2%29/"/>
    <updated>2012-09-07T01:22:00+09:00</updated>
    <id>http://blog.feelmy.net/2012/09/07/gyamblr-for-osx(tumblr-api-v2)</id>
    <content type="html"><![CDATA[<p>気づいたらAPI v1の提供が終了したとかでアップロードできなくなっていたのでv2版書きました。</p>

<h2>使い方</h2>

<p>scriptをGyazoのものと差し替えれば動きますが、tumblifeのgemが必要だったりOAuthの例に漏れず各種トークンが必要だったりするのでよしなにしてください。<br/>
トークン類は<a href="http://www.tumblr.com/oauth/apps" title="Tumblr">Tumblr</a>でアプリを登録して、oauth.rbを使うと良いと思います。</p>

<p><div><script src='https://gist.github.com/3657917.js'></script>
<noscript><pre><code>#!/usr/bin/env ruby
require 'oauth'

consumer = OAuth::Consumer.new(
  'consumer_key',
  'consumer_secret',
  {
    site: 'http://api.tumblr.com',
    request_token_url: &quot;http://www.tumblr.com/oauth/request_token&quot;,
    authorize_url: &quot;http://www.tumblr.com/oauth/authorize&quot;,
    access_token_url: &quot;http://www.tumblr.com/oauth/access_token&quot;
  }
)
request_token = consumer.get_request_token
system('open ' + request_token.authorize_url)

p 'enter oauth_verifier'
oauth_verifier = gets.chomp!
access_token = request_token.get_access_token(:oauth_verifier =&gt; oauth_verifier)

p 'oauth_token : ' + access_token.token
p 'oauth_token_secret : ' + access_token.secret</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
